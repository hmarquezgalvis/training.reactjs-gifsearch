{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifList.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","className","onSubmit","e","preventDefault","values","type","value","onChange","target","GifGridItem","id","title","url","src","alt","API_KEY","getGifList","query","a","limit","fetch","response","json","data","gifList","map","x","images","downsized_medium","GifGrid","category","initialState","items","loading","state","setState","useEffect","then","useFetchGifList","imageList","role","item","idx","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"wNAGMA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAGHC,mBADjB,mBAFoB,mBAGjCC,EAHiC,KAGrBC,EAHqB,KAkBzC,OACE,uBAAMC,UAAU,OACdC,SAXkB,SAAEC,GACtBA,EAAEC,iBAEiB,KAAfL,IAEJF,GAAe,SAAAQ,GAAM,OAAMN,GAAN,mBAAqBM,OAC1CL,EAAe,MAIf,UAGE,uBAAOC,UAAU,aAAjB,uBACA,uBAAOA,UAAU,eAAeK,KAAK,OACnCC,MAAQR,EACRS,SApBoB,SAAEL,GAC1BH,EAAcG,EAAEM,OAAOF,c,QCLdG,G,MAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACvC,OACE,mCACE,qBAAKZ,UAAU,QAAf,SACE,qBAAKA,UAAU,yDACba,IAAMD,EACNE,IAAMH,U,uBCVVI,EAAU,mCAEHC,EAAU,uCAAG,WAAQC,GAAR,qCAAAC,EAAA,6DAAeC,EAAf,+BAAuB,GACzCP,EADkB,uDACqCG,EADrC,cACoDE,EADpD,kBACqEE,GADrE,SAGDC,MAAOR,GAHN,cAGlBS,EAHkB,gBAIDA,EAASC,OAJR,uBAIhBC,EAJgB,EAIhBA,KAEFC,EAAUD,EAAKE,KAAK,SAAAC,GAAM,IAAD,EAC7B,MAAO,CACLhB,GAAIgB,EAAEhB,GACNC,MAAOe,EAAEf,MACTC,IAAG,UAAEc,EAAEC,cAAJ,aAAE,EAAUC,iBAAiBhB,QAVZ,kBAcjBY,GAdiB,4CAAH,sDCsCRK,EAlCC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,ECHH,SAAEA,GAA4B,IAAjBX,EAAgB,uDAAR,GAE5CY,EAAe,CAAEC,MAAO,GAAIC,SAAS,GAFe,EAGhCpC,mBAASkC,GAHuB,mBAGnDG,EAHmD,KAG5CC,EAH4C,KAa1D,OARAC,qBAAW,WACTpB,EAAYc,EAAUX,GAAQkB,MAAK,SAAAV,GAAM,OAAIQ,EAAS,CAClDH,MAAOL,EACPM,SAAS,SAGZ,CAAEH,EAAUX,IAERe,EDR+BI,CAAiBR,GAAxCS,EAFiB,EAExBP,MAAkBC,EAFM,EAENA,QAE1B,OACE,qBAAKjC,UAAU,YAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAIA,UAAU,aAAd,UACI8B,EAEAG,GAAW,qBAAKjC,UAAU,oCAAoCwC,KAAK,SAAxD,SACC,sBAAMxC,UAAU,kBAAhB,6BAKhB,qBAAKA,UAAU,yCAAf,SAEIuC,EAAUd,KAAK,SAACgB,EAAMC,GAAP,OACb,cAAC,EAAD,eAEOD,GADCA,EAAK/B,eEtBdiC,EAAe,WAE1B,IAFgC,EAGM9C,mBADjB,CAAE,YAAa,cAAe,iBAFnB,mBAGxB+C,EAHwB,KAGZhD,EAHY,KAKhC,OACE,sBAAKI,UAAU,YAAf,UACE,8CAEA,cAAC,EAAD,CACEJ,cAAgBA,IAGlB,uBAGEgD,EAAWnB,KAAK,SAAAK,GAAQ,OACtB,cAAC,EAAD,CAEEA,SAAWA,GADLA,U,MCflBe,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.63335ae7.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ setCategories }) => {\n\n  const initialState = 'Hunter x Hunter';\n  const [ inputValue, setInputValue ] = useState(initialState)\n\n  const handleInputChange = ( e ) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit  = ( e ) => {\n    e.preventDefault();\n\n    if (inputValue === '') return;\n\n    setCategories( values => [ inputValue, ...values] );\n    setInputValue( '' );\n  };\n\n  return (\n    <form className=\"mb-3\"\n      onSubmit={ handleSubmit }\n    >\n      <label className=\"form-label\">Category:</label>\n      <input className=\"form-control\" type=\"text\"\n        value={ inputValue }\n        onChange={ handleInputChange }\n      />\n    </form>\n  )\n}\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n};\n\nexport { AddCategory }\n","import React from 'react';\n\nimport './GifGridItem.css';\n\nexport const GifGridItem = ({ id, title, url }) => {\n  return (\n    <>\n      <div className=\"col-3\">\n        <img className=\"border border-white animate_animated animate__bounceIn\"\n          src={ url } \n          alt={ title } />\n      </div>\n    </>\n  )\n}\n","const API_KEY = 'aynHBxIKTHuBwiN66j684GVhgEzsRGSw';\n\nexport const getGifList = async ( query, limit = 12 ) => {\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=${ API_KEY }&q=${ query }&limit=${ limit }`;\n\n  const response = await fetch( url );\n  const { data } = await response.json();\n\n  const gifList = data.map( x => {\n    return {\n      id: x.id,\n      title: x.title,\n      url: x.images?.downsized_medium.url,\n    };\n  });\n  \n  return gifList;\n};","import React from 'react'\nimport PropTypes from 'prop-types';\n\nimport { GifGridItem } from './GifGridItem';\nimport { useFetchGifList } from '../hooks/useFetchGifList';\n\nconst GifGrid = ({ category }) => {\n\n  const { items: imageList, loading } = useFetchGifList( category );\n\n  return (\n    <div className=\"card mb-3\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">\n          { category }\n          { \n            loading && <div className=\"spinner-grow spinner-grow-sm ms-1\" role=\"status\">\n                        <span className=\"visually-hidden\">Loading...</span>\n                      </div>\n          }\n        </h5>\n\n        <div className=\"d-flex align-content-stretch flex-wrap\">\n          {\n            imageList.map( (item, idx) =>\n              <GifGridItem \n                key={ item.id }\n                { ...item } />\n            )\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nGifGrid.propTypes = {\n  category: PropTypes.string.isRequired\n};\n\nexport default GifGrid;\n","import { useEffect, useState } from \"react\";\nimport { getGifList } from \"../helpers/getGifs\";\n\nexport const useFetchGifList = ( category , limit = 12 ) => {\n\n  const initialState = { items: [], loading: true };\n  const [state, setState] = useState(initialState);\n\n  useEffect( () => {\n    getGifList( category, limit ).then(images => setState({\n        items: images,\n        loading: false,\n      })\n    );\n  }, [ category, limit ]);\n\n  return state;\n};","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n  const initialState = [ 'One Punch', 'Dragon Ball', 'Demon Slayer' ];\n  const [ categories, setCategories ] = useState(initialState);\n\n  return (\n    <div className=\"container\">\n      <h2>GifExpertApp</h2>\n\n      <AddCategory\n        setCategories={ setCategories }\n      />\n\n      <hr/>\n\n      { \n        categories.map( category => (\n          <GifGrid \n            key={ category }\n            category={ category }\n          />\n        ))\n      }\n    </div>\n  );\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GitExpertApp';\nimport './index.css';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}